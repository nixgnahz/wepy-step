<style lang="less">
  .calendar {
    background: #f8f8f8;
    padding-bottom: 25rpx;
    .bar {
      height: 80rpx;
      background: #fff;
      display: flex;
      justify-content: center;
      width: 350rpx;
      padding: 0 200rpx;
      border-top: 1rpx solid #ececec;
      .prev {
        width: 50rpx;
        display: flex;
        justify-content: center;
        align-items: center;
        image {
          width: 15rpx;
          height: 24rpx;
          display: block;
        }
      }
      .date {
        width: 275rpx;
        line-height: 79rpx;
        text-align: center;
        font-size: 32rpx;
        color: #404040;
        font-weight: bold;
      }
      .next {
        width: 50rpx;
        display: flex;
        justify-content: center;
        align-items: center;
        image {
          width: 15rpx;
          height: 24rpx;
          display: block;
          transform: rotate(180deg);
        }
      }
    }
    .week {
      height: 70rpx;
      padding: 0 25rpx;
      line-height: 70rpx;
      display: flex;
      .week-num {
        flex: 1;
        text-align: center;
        font-size: 24rpx;
        color: #868686;
        font-weight: bold;
      }
    }
    .days-box {
      padding: 0 24rpx 0 25rpx;
      .days {
        border-left: 1rpx solid #ececec;
        border-top: 1rpx solid #ececec;
        .columns {
          display: flex;
          .rows {
            width: 100rpx;
            height: 100rpx;
            border-right: 1rpx solid #ececec;
            border-bottom: 1rpx solid #ececec;
            background: #fff;
            .cell {
              width: 100%;
              height: 100%;
              position: relative;
              display: flex;
              justify-content: center;
              align-items: center;
              font-size: 30rpx;
              color: #606266;
              &:hover {
                color: #409eff;
              }
            }
          }
        }
      }
    }
  }
</style>

<template>
  <view class="calendar">
    <view class="bar">
      <view class="prev" @tap="handlePrev">
        <image src="http://wx.11babay.cn/uploads/Q/Qdh4nAHglce5Bkn7PTKf/2/a/3/6/5c21f78131f97.png"></image>
      </view>
      <view class="date">{{year}}年{{month}}月</view>
      <view class="next" @tap="handleNext">
        <image src="http://wx.11babay.cn/uploads/Q/Qdh4nAHglce5Bkn7PTKf/2/a/3/6/5c21f78131f97.png"></image>
      </view>
    </view>
    <view class="week">
      <repeat for="{{weeks}}" key="index" index="index" item="item">
        <view class="week-num">{{item}}</view>
      </repeat>
    </view>
    <view class="days-box">
      <view class="days">
        <repeat for="{{days.length / 7}}" key="idx" index="idx">
          <view class="columns">
            <repeat for="{{weeks}}" key="index_" index="index_">
              <view class="rows">
                <view class="cell" wx:if="{{!days[idx * 7 + index_].date}}"></view>
                <view class="cell" wx:else>{{days[idx * 7 + index_].date}}</view>
              </view>
            </repeat>
          </view>
        </repeat>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'

  export default class Calendar extends wepy.component {
    props = {
      isSundayFirst: {
        type: Boolean,
        default: true
      }
    }

    data = {
      year: '--',
      month: '--',
      days: []
    }

    computed = {
      weeks () {
        return this.isSundayFirst ? ['日', '一', '二', '三', '四', '五', '六'] : ['一', '二', '三', '四', '五', '六', '日']
      }
    }

    onLoad () {
      const now = new Date()
      this.year = now.getFullYear()
      this.month = now.getMonth() + 1
      this.initDays()
    }

    methods = {
      handlePrev () {
        if (this.month === 1) {
          this.year--
          this.month = 12
        } else {
          this.month--
        }
        this.initDays()
      },
      handleNext () {
        if (this.month === 12) {
          this.year++
          this.month = 1
        } else {
          this.month++
        }
      }
    }

    initDays () {
      const firstDayOfWeek = new Date(Date.UTC(this.year, this.month - 1, this.isSundayFirst ? 1 : 0)).getDay()
      const dayNum = new Date(this.year, this.month, 0).getDate()
      const weekNum = Math.ceil((firstDayOfWeek + dayNum) / 7)
      const arr = []
      for (let i = 0; i < weekNum * 7; i++) {
        if (i >= firstDayOfWeek && i < dayNum + firstDayOfWeek) {
          arr.push({ date: i - firstDayOfWeek + 1 })
        } else {
          arr.push({ date: 0 })
        }
      }
      this.days = arr
    }
  }
</script>
